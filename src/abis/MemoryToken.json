{
  "contractName": "MemoryToken",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/andreasbigger/Projects/dapp_university/blockchain_game/src/contracts/MemoryToken.sol\":\"MemoryToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/andreasbigger/Projects/dapp_university/blockchain_game/src/contracts/ERC721Full.sol\":{\"keccak256\":\"0x8cd11715c2f49a8c96c86ac92a9b9c40664912b8c17bb586c27fb058e6540ccd\",\"urls\":[\"bzz-raw://4006bdf139c844b23d043e0ce5806fffa008ff2fefb71cb2b071e9dd5d9b9964\",\"dweb:/ipfs/QmRouLvttHud8tXadWr8gEcqKoL8mnCBcWrvaKUXZRQ52t\"]},\"/Users/andreasbigger/Projects/dapp_university/blockchain_game/src/contracts/MemoryToken.sol\":{\"keccak256\":\"0xb2986ed53c1109ede0c2500daced213b7057c34e88a430a32450de42c3d9c72f\",\"urls\":[\"bzz-raw://0905588fed41c71e606392d17e6d01e32f3bd0a836cb5482d26432051c3fc169\",\"dweb:/ipfs/QmWj6i48L3UiN4E5MNbtEwWibFznGcPw8YFxwiJEjdNjR3\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600c81526020017f4d656d6f727920546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600681526020017f4d454d544b4e00000000000000000000000000000000000000000000000000008152508181620000986301ffc9a760e01b6200011c60201b60201c565b620000b06380ac58cd60e01b6200011c60201b60201c565b620000c863780e9d6360e01b6200011c60201b60201c565b8160099080519060200190620000e092919062000225565b5080600a9080519060200190620000f992919062000225565b5062000112635b5e139f60e01b6200011c60201b60201c565b50505050620002d4565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200026857805160ff191683800117855562000299565b8280016001018555821562000299579182015b82811115620002985782518255916020019190600101906200027b565b5b509050620002a89190620002ac565b5090565b620002d191905b80821115620002cd576000816000905550600101620002b3565b5090565b90565b61268f80620002e46000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a2578063a22cb46511610071578063a22cb4651461059b578063b88d4fde146105eb578063c87b56dd146106f0578063d0def52114610797578063e985e9c5146108485761010b565b80634f6ccce7146104105780636352211e1461045257806370a08231146104c057806395d89b41146105185761010b565b806318160ddd116100de57806318160ddd146102b457806323b872dd146102d25780632f745c591461034057806342842e0e146103a25761010b565b806301ffc9a71461011057806306fdde0314610175578063081812fc146101f8578063095ea7b314610266575b600080fd5b61015b6004803603602081101561012657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506108c4565b604051808215151515815260200191505060405180910390f35b61017d61092b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101bd5780820151818401526020810190506101a2565b50505050905090810190601f1680156101ea5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102246004803603602081101561020e57600080fd5b81019080803590602001909291905050506109cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b26004803603604081101561027c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a68565b005b6102bc610c41565b6040518082815260200191505060405180910390f35b61033e600480360360608110156102e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c4e565b005b61038c6004803603604081101561035657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cbd565b6040518082815260200191505060405180910390f35b61040e600480360360608110156103b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d7c565b005b61043c6004803603602081101561042657600080fd5b8101908080359060200190929190505050610d9c565b6040518082815260200191505060405180910390f35b61047e6004803603602081101561046857600080fd5b8101908080359060200190929190505050610e1c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610502600480360360208110156104d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ee4565b6040518082815260200191505060405180910390f35b610520610fb9565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610560578082015181840152602081019050610545565b50505050905090810190601f16801561058d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105e9600480360360408110156105b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061105b565b005b6106ee6004803603608081101561060157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561066857600080fd5b82018360208201111561067a57600080fd5b8035906020019184600183028401116401000000008311171561069c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111fe565b005b61071c6004803603602081101561070657600080fd5b8101908080359060200190929190505050611270565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561075c578082015181840152602081019050610741565b50505050905090810190601f1680156107895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61082e600480360360408110156107ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156107ea57600080fd5b8201836020820111156107fc57600080fd5b8035906020019184600183028401116401000000008311171561081e57600080fd5b9091929391929390505050611383565b604051808215151515815260200191505060405180910390f35b6108aa6004803603604081101561085e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611524565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109c35780601f10610998576101008083540402835291602001916109c3565b820191906000526020600020905b8154815290600101906020018083116109a657829003601f168201915b5050505050905090565b60006109d8826115b8565b610a2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061252d602c913960400191505060405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a7382610e1c565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610afa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806125dd6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b3a5750610b398133611524565b5b610b8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806124a26038913960400191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600780549050905090565b610c58338261162a565b610cad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806125fe6031913960400191505060405180910390fd5b610cb883838361171e565b505050565b6000610cc883610ee4565b8210610d1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806123f5602b913960400191505060405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610d6957fe5b9060005260206000200154905092915050565b610d97838383604051806020016040528060008152506111fe565b505050565b6000610da6610c41565b8210610dfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061262f602c913960400191505060405180910390fd5b60078281548110610e0a57fe5b90600052602060002001549050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610edb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806125046029913960400191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806124da602a913960400191505060405180910390fd5b610fb2600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611742565b9050919050565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110515780601f1061102657610100808354040283529160200191611051565b820191906000526020600020905b81548152906001019060200180831161103457829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611209848484610c4e565b61121584848484611750565b61126a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806124206032913960400191505060405180910390fd5b50505050565b606061127b826115b8565b6112d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806125ae602f913960400191505060405180910390fd5b600b60008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113775780601f1061134c57610100808354040283529160200191611377565b820191906000526020600020905b81548152906001019060200180831161135a57829003601f168201915b50505050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611427576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f41646472657373206d7573742062652076616c6964000000000000000000000081525060200191505060405180910390fd5b60008383905014156114a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4d757374206861766520612076616c696420555249000000000000000000000081525060200191505060405180910390fd5b60006114be60016114b0610c41565b61193990919063ffffffff16565b90506114ca85826119c1565b6115188185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506119e2565b60019150509392505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000611635826115b8565b61168a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612476602c913960400191505060405180910390fd5b600061169583610e1c565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061170457508373ffffffffffffffffffffffffffffffffffffffff166116ec846109cd565b73ffffffffffffffffffffffffffffffffffffffff16145b8061171557506117148185611524565b5b91505092915050565b611729838383611a6c565b6117338382611cc7565b61173d8282611e65565b505050565b600081600001549050919050565b60006117718473ffffffffffffffffffffffffffffffffffffffff16611f2c565b61177e5760019050611931565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561185957808201518184015260208101905061183e565b50505050905090810190601f1680156118865780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156118a857600080fd5b505af11580156118bc573d6000803e3d6000fd5b505050506040513d60208110156118d257600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000808284019050838110156119b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6119cb8282611f3f565b6119d58282611e65565b6119de81612157565b5050565b6119eb826115b8565b611a40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612559602c913960400191505060405180910390fd5b80600b60008481526020019081526020016000209080519060200190611a67929190612323565b505050565b8273ffffffffffffffffffffffffffffffffffffffff16611a8c82610e1c565b73ffffffffffffffffffffffffffffffffffffffff1614611af8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806125856029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806124526024913960400191505060405180910390fd5b611b87816121a3565b611bce600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612261565b611c15600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612284565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611d1f6001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061229a90919063ffffffff16565b9050600060066000848152602001908152602001600020549050818114611e0c576000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611d8c57fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611de457fe5b9060005260206000200181905550816006600083815260200190815260200160002081905550505b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611e5e91906123a3565b5050505050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506006600083815260200190815260200160002081905550600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611fe2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b611feb816115b8565b1561205e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120f7600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612284565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6007805490506008600083815260200190815260200160002081905550600781908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461225e5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6122796001826000015461229a90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115612312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061236457805160ff1916838001178555612392565b82800160010185558215612392579182015b82811115612391578251825591602001919060010190612376565b5b50905061239f91906123cf565b5090565b8154818355818111156123ca578183600052602060002091820191016123c991906123cf565b5b505050565b6123f191905b808211156123ed5760008160009055506001016123d5565b5090565b9056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a723158203bf35e5e960817591bb2a7eb905995f558a2ef7e0c33b89d87f253676c57551f64736f6c63430005100032",
  "deployedBytecode": "",
  "sourceMap": "53:542:1:-;;;125:60;8:9:-1;5:2;;;30:1;27;20:12;5:2;125:60:1;38045:174:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38137:4;38143:6;11104:40;10772:10;11123:20;;11104:18;;;:40;;:::i;:::-;14120;13995:10;14139:20;;14120:18;;;:40;;:::i;:::-;26780:51;26596:10;26799:31;;26780:18;;;:51;;:::i;:::-;35623:4;35615:5;:12;;;;;;;;;;;;:::i;:::-;;35647:6;35637:7;:16;;;;;;;;;;;;:::i;:::-;;35741:49;35478:10;35760:29;;35741:18;;;:49;;:::i;:::-;35544:253;;38045:174;;53:542:1;;11856:190:0;11946:10;11931:25;;:11;:25;;;;;11923:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12035:4;11999:20;:33;12020:11;11999:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;11856:190;:::o;53:542:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "53:542:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53:542:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11301:161:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11301:161:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;35902:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;35902:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16218:234;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16218:234:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15509:424;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15509:424:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;27656:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17920:349;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17920:349:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;27212:291;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;27212:291:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18902:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18902:162:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;28088:230;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;28088:230:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14831:257;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14831:257:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14371:241;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14371:241:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;36094:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;36094:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16745:243;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16745:243:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19769:337;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;19769:337:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;19769:337:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;19769:337:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;19769:337:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;19769:337:0;;;;;;;;;;;;;;;:::i;:::-;;36381:236;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;36381:236:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;36381:236:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;211:382:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;211:382:1;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;211:382:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;211:382:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;211:382:1;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;17310:173:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17310:173:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11301:161;11395:4;11422:20;:33;11443:11;11422:33;;;;;;;;;;;;;;;;;;;;;;;;;;;11415:40;;11301:161;;;:::o;35902:83::-;35941:13;35973:5;35966:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35902:83;:::o;16218:234::-;16277:7;16317:16;16325:7;16317;:16::i;:::-;16296:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16421:15;:24;16437:7;16421:24;;;;;;;;;;;;;;;;;;;;;16414:31;;16218:234;;;:::o;15509:424::-;15572:13;15588:16;15596:7;15588;:16::i;:::-;15572:32;;15628:5;15622:11;;:2;:11;;;;15614:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15717:5;15703:19;;:10;:19;;;:58;;;;15726:35;15743:5;15750:10;15726:16;:35::i;:::-;15703:58;15682:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15881:2;15854:15;:24;15870:7;15854:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;15918:7;15914:2;15898:28;;15907:5;15898:28;;;;;;;;;;;;15509:424;;;:::o;27656:94::-;27700:7;27726:10;:17;;;;27719:24;;27656:94;:::o;17920:349::-;18105:39;18124:10;18136:7;18105:18;:39::i;:::-;18084:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18230:32;18244:4;18250:2;18254:7;18230:13;:32::i;:::-;17920:349;;;:::o;27212:291::-;27316:7;27368:16;27378:5;27368:9;:16::i;:::-;27360:5;:24;27339:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27470:12;:19;27483:5;27470:19;;;;;;;;;;;;;;;27490:5;27470:26;;;;;;;;;;;;;;;;27463:33;;27212:291;;;;:::o;18902:162::-;19018:39;19035:4;19041:2;19045:7;19018:39;;;;;;;;;;;;:16;:39::i;:::-;18902:162;;;:::o;28088:230::-;28146:7;28194:13;:11;:13::i;:::-;28186:5;:21;28165:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28294:10;28305:5;28294:17;;;;;;;;;;;;;;;;28287:24;;28088:230;;;:::o;14831:257::-;14886:7;14905:13;14921:11;:20;14933:7;14921:20;;;;;;;;;;;;;;;;;;;;;14905:36;;14989:1;14972:19;;:5;:19;;;;14951:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15076:5;15069:12;;;14831:257;;;:::o;14371:241::-;14426:7;14483:1;14466:19;;:5;:19;;;;14445:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14571:34;:17;:24;14589:5;14571:24;;;;;;;;;;;;;;;:32;:34::i;:::-;14564:41;;14371:241;;;:::o;36094:87::-;36135:13;36167:7;36160:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36094:87;:::o;16745:243::-;16830:10;16824:16;;:2;:16;;;;16816:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16918:8;16881:18;:30;16900:10;16881:30;;;;;;;;;;;;;;;:34;16912:2;16881:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;16968:2;16941:40;;16956:10;16941:40;;;16972:8;16941:40;;;;;;;;;;;;;;;;;;;;;;16745:243;;:::o;19769:337::-;19913:31;19926:4;19932:2;19936:7;19913:12;:31::i;:::-;19975:48;19998:4;20004:2;20008:7;20017:5;19975:22;:48::i;:::-;19954:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19769:337;;;;:::o;36381:236::-;36439:13;36485:16;36493:7;36485;:16::i;:::-;36464:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36591:10;:19;36602:7;36591:19;;;;;;;;;;;36584:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36381:236;;;:::o;211:382:1:-;299:4;342:1;327:17;;:3;:17;;;;319:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;415:1;394:9;;388:23;;:28;;380:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;453:16;472:20;490:1;472:13;:11;:13::i;:::-;:17;;:20;;;;:::i;:::-;453:39;;502:20;508:3;513:8;502:5;:20::i;:::-;532:33;545:8;555:9;;532:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;532:33:1;;;;;;:12;:33::i;:::-;582:4;575:11;;;211:382;;;;;:::o;17310:173:0:-;17414:4;17441:18;:25;17460:5;17441:25;;;;;;;;;;;;;;;:35;17467:8;17441:35;;;;;;;;;;;;;;;;;;;;;;;;;17434:42;;17310:173;;;;:::o;20301:152::-;20358:4;20374:13;20390:11;:20;20402:7;20390:20;;;;;;;;;;;;;;;;;;;;;20374:36;;20444:1;20427:19;;:5;:19;;;;20420:26;;;20301:152;;;:::o;20814:415::-;20923:4;20964:16;20972:7;20964;:16::i;:::-;20943:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21060:13;21076:16;21084:7;21076;:16::i;:::-;21060:32;;21121:5;21110:16;;:7;:16;;;:63;;;;21166:7;21142:31;;:20;21154:7;21142:11;:20::i;:::-;:31;;;21110:63;:111;;;;21189:32;21206:5;21213:7;21189:16;:32::i;:::-;21110:111;21102:120;;;20814:415;;;;:::o;28693:269::-;28808:38;28828:4;28834:2;28838:7;28808:19;:38::i;:::-;28857:47;28890:4;28896:7;28857:32;:47::i;:::-;28915:40;28943:2;28947:7;28915:27;:40::i;:::-;28693:269;;;:::o;10028:112::-;10093:7;10119;:14;;;10112:21;;10028:112;;;:::o;24164:463::-;24315:4;24336:15;:2;:13;;;:15::i;:::-;24331:58;;24374:4;24367:11;;;;24331:58;24399:13;24443:2;24427:36;;;24481:10;24509:4;24531:7;24556:5;24427:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;24427:148:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24427:148:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24427:148:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24427:148:0;;;;;;;;;;;;;;;;24399:176;;12619:10;24603:16;;24593:26;;;:6;:26;;;;24585:35;;;24164:463;;;;;;;:::o;5216:176::-;5274:7;5293:9;5309:1;5305;:5;5293:17;;5333:1;5328;:6;;5320:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5384:1;5377:8;;;5216:176;;;;:::o;29219:196::-;29282:24;29294:2;29298:7;29282:11;:24::i;:::-;29317:40;29345:2;29349:7;29317:27;:40::i;:::-;29368;29400:7;29368:31;:40::i;:::-;29219:196;;:::o;36856:226::-;36954:16;36962:7;36954;:16::i;:::-;36933:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37072:3;37050:10;:19;37061:7;37050:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;36856:226;;:::o;23080:511::-;23236:4;23216:24;;:16;23224:7;23216;:16::i;:::-;:24;;;23195:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23339:1;23325:16;;:2;:16;;;;23317:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23393:23;23408:7;23393:14;:23::i;:::-;23427:35;:17;:23;23445:4;23427:23;;;;;;;;;;;;;;;:33;:35::i;:::-;23472:33;:17;:21;23490:2;23472:21;;;;;;;;;;;;;;;:31;:33::i;:::-;23539:2;23516:11;:20;23528:7;23516:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;23576:7;23572:2;23557:27;;23566:4;23557:27;;;;;;;;;;;;23080:511;;;:::o;31859:1140::-;32133:22;32158:32;32188:1;32158:12;:18;32171:4;32158:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;32133:57;;32200:18;32221:17;:26;32239:7;32221:26;;;;;;;;;;;;32200:47;;32365:14;32351:10;:28;32347:323;;32395:19;32417:12;:18;32430:4;32417:18;;;;;;;;;;;;;;;32436:14;32417:34;;;;;;;;;;;;;;;;32395:56;;32499:11;32466:12;:18;32479:4;32466:18;;;;;;;;;;;;;;;32485:10;32466:30;;;;;;;;;;;;;;;:44;;;;32615:10;32582:17;:30;32600:11;32582:30;;;;;;;;;;;:43;;;;32347:323;;32756:12;:18;32769:4;32756:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;31859:1140;;;;:::o;30705:183::-;30818:12;:16;30831:2;30818:16;;;;;;;;;;;;;;;:23;;;;30789:17;:26;30807:7;30789:26;;;;;;;;;;;:52;;;;30851:12;:16;30864:2;30851:16;;;;;;;;;;;;;;;30873:7;30851:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;30851:30:0;;;;;;;;;;;;;;;;;;;;;;30705:183;;:::o;8506:433::-;8566:4;8769:12;8890:7;8878:20;8870:28;;8931:1;8924:4;:8;8917:15;;;8506:433;;;:::o;21474:327::-;21559:1;21545:16;;:2;:16;;;;21537:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21617:16;21625:7;21617;:16::i;:::-;21616:17;21608:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21700:2;21677:11;:20;21689:7;21677:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;21712:33;:17;:21;21730:2;21712:21;;;;;;;;;;;;;;;:31;:33::i;:::-;21786:7;21782:2;21761:33;;21778:1;21761:33;;;;;;;;;;;;21474:327;;:::o;31083:161::-;31186:10;:17;;;;31159:15;:24;31175:7;31159:24;;;;;;;;;;;:44;;;;31213:10;31229:7;31213:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;31213:24:0;;;;;;;;;;;;;;;;;;;;;;31083:161;:::o;24789:171::-;24888:1;24852:38;;:15;:24;24868:7;24852:24;;;;;;;;;;;;;;;;;;;;;:38;;;24848:106;;24941:1;24906:15;:24;24922:7;24906:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;24848:106;24789:171;:::o;10241:108::-;10321:21;10340:1;10321:7;:14;;;:18;;:21;;;;:::i;:::-;10304:7;:14;;:38;;;;10241:108;:::o;10146:89::-;10227:1;10209:7;:14;;;:19;;;;;;;;;;;10146:89;:::o;5656:179::-;5714:7;5746:1;5741;:6;;5733:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5792:9;5808:1;5804;:5;5792:17;;5827:1;5820:8;;;5656:179;;;;:::o;53:542:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC721Full.sol\";\n\ncontract MemoryToken is ERC721Full {\n    // * Inherited Constructor\n    constructor() public ERC721Full(\"Memory Token\", \"MEMTKN\") {}\n\n    // * Mint Token\n    function mint(address _to, string calldata _tokenURI)\n        external\n        returns (bool)\n    {\n        require(_to != address(0), \"Address must be valid\");\n        require(bytes(_tokenURI).length != 0, \"Must have a valid URI\");\n\n        uint256 _tokenId = totalSupply().add(1);\n        _mint(_to, _tokenId);\n        _setTokenURI(_tokenId, _tokenURI);\n        return true;\n    }\n}\n",
  "sourcePath": "/Users/andreasbigger/Projects/dapp_university/blockchain_game/src/contracts/MemoryToken.sol",
  "ast": {
    "absolutePath": "/Users/andreasbigger/Projects/dapp_university/blockchain_game/src/contracts/MemoryToken.sol",
    "exportedSymbols": {
      "MemoryToken": [
        1517
      ]
    },
    "id": 1518,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1456,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/andreasbigger/Projects/dapp_university/blockchain_game/src/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 1457,
        "nodeType": "ImportDirective",
        "scope": 1518,
        "sourceUnit": 1455,
        "src": "25:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1458,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1454,
              "src": "77:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1454",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 1459,
            "nodeType": "InheritanceSpecifier",
            "src": "77:10:1"
          }
        ],
        "contractDependencies": [
          9,
          110,
          372,
          930,
          955,
          1288,
          1309,
          1434,
          1454
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1517,
        "linearizedBaseContracts": [
          1517,
          1454,
          1434,
          1309,
          1288,
          955,
          930,
          110,
          372,
          9
        ],
        "name": "MemoryToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1466,
              "nodeType": "Block",
              "src": "183:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 1467,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4d656d6f727920546f6b656e",
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "157:14:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_820d35e3ee6e38b7fca5ae4ff0805e7ba0cc1cdd6864964b6de0cfc516bee43d",
                      "typeString": "literal_string \"Memory Token\""
                    },
                    "value": "Memory Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d454d544b4e",
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "173:8:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_13684df3805309d745ee3e16e5694d8af7aa67c9483bbf81f74d955b62dabc88",
                      "typeString": "literal_string \"MEMTKN\""
                    },
                    "value": "MEMTKN"
                  }
                ],
                "id": 1464,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1461,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1454,
                  "src": "146:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1454_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "146:36:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "136:2:1"
            },
            "returnParameters": {
              "id": 1465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "183:0:1"
            },
            "scope": 1517,
            "src": "125:60:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1515,
              "nodeType": "Block",
              "src": "309:284:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1477,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1469,
                          "src": "327:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "342:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "334:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "334:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "327:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206d7573742062652076616c6964",
                        "id": 1482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "346:23:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7e665da7175b939c7746aa731e1ef543f098601c2ef9c0126933065af539a021",
                          "typeString": "literal_string \"Address must be valid\""
                        },
                        "value": "Address must be valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7e665da7175b939c7746aa731e1ef543f098601c2ef9c0126933065af539a021",
                          "typeString": "literal_string \"Address must be valid\""
                        }
                      ],
                      "id": 1476,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1592,
                        1593
                      ],
                      "referencedDeclaration": 1593,
                      "src": "319:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "319:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1484,
                  "nodeType": "ExpressionStatement",
                  "src": "319:51:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1487,
                                "name": "_tokenURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1471,
                                "src": "394:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 1486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "388:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "388:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "388:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "415:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "388:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206861766520612076616c696420555249",
                        "id": 1492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "418:23:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21382c2bce3ff2b7c01825a0dcbf93625ce3d1f36422c77a223475442109e870",
                          "typeString": "literal_string \"Must have a valid URI\""
                        },
                        "value": "Must have a valid URI"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21382c2bce3ff2b7c01825a0dcbf93625ce3d1f36422c77a223475442109e870",
                          "typeString": "literal_string \"Must have a valid URI\""
                        }
                      ],
                      "id": 1485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1592,
                        1593
                      ],
                      "referencedDeclaration": 1593,
                      "src": "380:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "380:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1494,
                  "nodeType": "ExpressionStatement",
                  "src": "380:62:1"
                },
                {
                  "assignments": [
                    1496
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1496,
                      "name": "_tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1515,
                      "src": "453:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1495,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "453:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1502,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "490:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1497,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1023
                          ],
                          "referencedDeclaration": 1023,
                          "src": "472:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "472:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 151,
                      "src": "472:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "472:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "453:39:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1504,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
                        "src": "508:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1505,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1496,
                        "src": "513:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1503,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1095
                      ],
                      "referencedDeclaration": 1095,
                      "src": "502:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "502:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1507,
                  "nodeType": "ExpressionStatement",
                  "src": "502:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1509,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1496,
                        "src": "545:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1510,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "555:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 1508,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1403,
                      "src": "532:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "532:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "532:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "582:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1475,
                  "id": 1514,
                  "nodeType": "Return",
                  "src": "575:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 1516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1469,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "225:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "225:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1471,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "238:25:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "224:40:1"
            },
            "returnParameters": {
              "id": 1475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1474,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1516,
                  "src": "299:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1473,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "299:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "298:6:1"
            },
            "scope": 1517,
            "src": "211:382:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1518,
        "src": "53:542:1"
      }
    ],
    "src": "0:596:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/andreasbigger/Projects/dapp_university/blockchain_game/src/contracts/MemoryToken.sol",
      "exportedSymbols": {
        "MemoryToken": [
          1517
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 1456,
        "name": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "attributes": {
          "SourceUnit": 1455,
          "absolutePath": "/Users/andreasbigger/Projects/dapp_university/blockchain_game/src/contracts/ERC721Full.sol",
          "file": "./ERC721Full.sol",
          "scope": 1518,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1457,
        "name": "ImportDirective",
        "src": "25:26:1"
      },
      {
        "attributes": {
          "contractDependencies": [
            9,
            110,
            372,
            930,
            955,
            1288,
            1309,
            1434,
            1454
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1517,
            1454,
            1434,
            1309,
            1288,
            955,
            930,
            110,
            372,
            9
          ],
          "name": "MemoryToken",
          "scope": 1518
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Full",
                  "referencedDeclaration": 1454,
                  "type": "contract ERC721Full"
                },
                "id": 1458,
                "name": "UserDefinedTypeName",
                "src": "77:10:1"
              }
            ],
            "id": 1459,
            "name": "InheritanceSpecifier",
            "src": "77:10:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1517,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1460,
                "name": "ParameterList",
                "src": "136:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1465,
                "name": "ParameterList",
                "src": "183:0:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1454,
                      "type": "type(contract ERC721Full)",
                      "value": "ERC721Full"
                    },
                    "id": 1461,
                    "name": "Identifier",
                    "src": "146:10:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "4d656d6f727920546f6b656e",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Memory Token\"",
                      "value": "Memory Token"
                    },
                    "id": 1462,
                    "name": "Literal",
                    "src": "157:14:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "4d454d544b4e",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"MEMTKN\"",
                      "value": "MEMTKN"
                    },
                    "id": 1463,
                    "name": "Literal",
                    "src": "173:8:1"
                  }
                ],
                "id": 1464,
                "name": "ModifierInvocation",
                "src": "146:36:1"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1466,
                "name": "Block",
                "src": "183:2:1"
              }
            ],
            "id": 1467,
            "name": "FunctionDefinition",
            "src": "125:60:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 1517,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 1516,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1468,
                        "name": "ElementaryTypeName",
                        "src": "225:7:1"
                      }
                    ],
                    "id": 1469,
                    "name": "VariableDeclaration",
                    "src": "225:11:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenURI",
                      "scope": 1516,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1470,
                        "name": "ElementaryTypeName",
                        "src": "238:6:1"
                      }
                    ],
                    "id": 1471,
                    "name": "VariableDeclaration",
                    "src": "238:25:1"
                  }
                ],
                "id": 1472,
                "name": "ParameterList",
                "src": "224:40:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1516,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1473,
                        "name": "ElementaryTypeName",
                        "src": "299:4:1"
                      }
                    ],
                    "id": 1474,
                    "name": "VariableDeclaration",
                    "src": "299:4:1"
                  }
                ],
                "id": 1475,
                "name": "ParameterList",
                "src": "298:6:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7e665da7175b939c7746aa731e1ef543f098601c2ef9c0126933065af539a021",
                                  "typeString": "literal_string \"Address must be valid\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1592,
                                1593
                              ],
                              "referencedDeclaration": 1593,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1476,
                            "name": "Identifier",
                            "src": "319:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1469,
                                  "type": "address",
                                  "value": "_to"
                                },
                                "id": 1477,
                                "name": "Identifier",
                                "src": "327:3:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 1478,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "334:7:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 1479,
                                    "name": "Literal",
                                    "src": "342:1:1"
                                  }
                                ],
                                "id": 1480,
                                "name": "FunctionCall",
                                "src": "334:10:1"
                              }
                            ],
                            "id": 1481,
                            "name": "BinaryOperation",
                            "src": "327:17:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "41646472657373206d7573742062652076616c6964",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Address must be valid\"",
                              "value": "Address must be valid"
                            },
                            "id": 1482,
                            "name": "Literal",
                            "src": "346:23:1"
                          }
                        ],
                        "id": 1483,
                        "name": "FunctionCall",
                        "src": "319:51:1"
                      }
                    ],
                    "id": 1484,
                    "name": "ExpressionStatement",
                    "src": "319:51:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_21382c2bce3ff2b7c01825a0dcbf93625ce3d1f36422c77a223475442109e870",
                                  "typeString": "literal_string \"Must have a valid URI\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1592,
                                1593
                              ],
                              "referencedDeclaration": 1593,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1485,
                            "name": "Identifier",
                            "src": "380:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes calldata",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_calldata_ptr",
                                              "typeString": "string calldata"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)",
                                          "value": "bytes"
                                        },
                                        "id": 1486,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "388:5:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1471,
                                          "type": "string calldata",
                                          "value": "_tokenURI"
                                        },
                                        "id": 1487,
                                        "name": "Identifier",
                                        "src": "394:9:1"
                                      }
                                    ],
                                    "id": 1488,
                                    "name": "FunctionCall",
                                    "src": "388:16:1"
                                  }
                                ],
                                "id": 1489,
                                "name": "MemberAccess",
                                "src": "388:23:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1490,
                                "name": "Literal",
                                "src": "415:1:1"
                              }
                            ],
                            "id": 1491,
                            "name": "BinaryOperation",
                            "src": "388:28:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4d757374206861766520612076616c696420555249",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Must have a valid URI\"",
                              "value": "Must have a valid URI"
                            },
                            "id": 1492,
                            "name": "Literal",
                            "src": "418:23:1"
                          }
                        ],
                        "id": 1493,
                        "name": "FunctionCall",
                        "src": "380:62:1"
                      }
                    ],
                    "id": 1494,
                    "name": "ExpressionStatement",
                    "src": "380:62:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1496
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "_tokenId",
                          "scope": 1515,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1495,
                            "name": "ElementaryTypeName",
                            "src": "453:7:1"
                          }
                        ],
                        "id": 1496,
                        "name": "VariableDeclaration",
                        "src": "453:16:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "add",
                              "referencedDeclaration": 151,
                              "type": "function (uint256,uint256) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        1023
                                      ],
                                      "referencedDeclaration": 1023,
                                      "type": "function () view returns (uint256)",
                                      "value": "totalSupply"
                                    },
                                    "id": 1497,
                                    "name": "Identifier",
                                    "src": "472:11:1"
                                  }
                                ],
                                "id": 1498,
                                "name": "FunctionCall",
                                "src": "472:13:1"
                              }
                            ],
                            "id": 1499,
                            "name": "MemberAccess",
                            "src": "472:17:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 1500,
                            "name": "Literal",
                            "src": "490:1:1"
                          }
                        ],
                        "id": 1501,
                        "name": "FunctionCall",
                        "src": "472:20:1"
                      }
                    ],
                    "id": 1502,
                    "name": "VariableDeclarationStatement",
                    "src": "453:39:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                1095
                              ],
                              "referencedDeclaration": 1095,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 1503,
                            "name": "Identifier",
                            "src": "502:5:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1469,
                              "type": "address",
                              "value": "_to"
                            },
                            "id": 1504,
                            "name": "Identifier",
                            "src": "508:3:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1496,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 1505,
                            "name": "Identifier",
                            "src": "513:8:1"
                          }
                        ],
                        "id": 1506,
                        "name": "FunctionCall",
                        "src": "502:20:1"
                      }
                    ],
                    "id": 1507,
                    "name": "ExpressionStatement",
                    "src": "502:20:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1403,
                              "type": "function (uint256,string memory)",
                              "value": "_setTokenURI"
                            },
                            "id": 1508,
                            "name": "Identifier",
                            "src": "532:12:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1496,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 1509,
                            "name": "Identifier",
                            "src": "545:8:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1471,
                              "type": "string calldata",
                              "value": "_tokenURI"
                            },
                            "id": 1510,
                            "name": "Identifier",
                            "src": "555:9:1"
                          }
                        ],
                        "id": 1511,
                        "name": "FunctionCall",
                        "src": "532:33:1"
                      }
                    ],
                    "id": 1512,
                    "name": "ExpressionStatement",
                    "src": "532:33:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1475
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 1513,
                        "name": "Literal",
                        "src": "582:4:1"
                      }
                    ],
                    "id": 1514,
                    "name": "Return",
                    "src": "575:11:1"
                  }
                ],
                "id": 1515,
                "name": "Block",
                "src": "309:284:1"
              }
            ],
            "id": 1516,
            "name": "FunctionDefinition",
            "src": "211:382:1"
          }
        ],
        "id": 1517,
        "name": "ContractDefinition",
        "src": "53:542:1"
      }
    ],
    "id": 1518,
    "name": "SourceUnit",
    "src": "0:596:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x749d046ef77c9a8B2712b455967637AE6Ea6eF44",
      "transactionHash": "0x7c16e704f9d72ab5dd1d371a112979369f8a2999259b1b2a31d41a775c2f0c27"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-07T06:31:42.655Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}